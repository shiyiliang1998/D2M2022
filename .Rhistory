library(tidyverse)
library(readxl)
read_csv('MM Data.csv)
mm data <- read_csv('MM Data.csv)
mm.data <- read_csv('MM Data.csv)
mm.data <- read_csv("MM Data.csv")
mm.data <- read_csv("MM Data.csv"
)
library(tidyverse)
library(readxl)
i
library(readxl)
library(tidyverse)
library(readxl)
# mc2sl: i saved the result of your read-in to something called
# "dataset" but you can rename that to something more informative
dataset <- read_excel("dataset.xlsx")
raw.data.path <- "DATA/"
ptcp.metadata.file <- "DATA/dataset1.xlsx"
# Read in the participant and experiment metadata
# First list all the sheets in the file
metadata.sheets <- excel_sheets(ptcp.metadata.file)
# Create an empty tibble that we will load all the sheets into
ptcp.metadata <- tibble()
# Loop through each sheet...
for (sheet in metadata.sheets) {
# Read the information in the sheet
sheet.metadata <- read_excel(ptcp.metadata.file, sheet = sheet) %>%
# Remove columns we won't use
#select(-Date, -Time, -Notes, -`Screen?`)
# Add the information to the all-sheet tibble
ptcp.metadata <- ptcp.metadata %>%
bind_rows(sheet.metadata)
}
raw.data.path <- "DATA/"
ptcp.metadata.file <- "DATA/dataset1.xlsx"
# Read in the participant and experiment metadata
# First list all the sheets in the file
metadata.sheets <- excel_sheets(ptcp.metadata.file)
# Create an empty tibble that we will load all the sheets into
ptcp.metadata <- tibble()
raw.data.path <- "DATA/"
ptcp.metadata.file <- "DATA/dataset1.xlsx"
# Read in the participant and experiment metadata
# First list all the sheets in the file
metadata.sheets <- excel_sheets(ptcp.metadata.file)
# Create an empty tibble that we will load all the sheets into
ptcp.metadata <- tibble()
raw.data.path <- "DATA/"
ptcp.metadata.file <- "DATA/dataset1.xlsx"
# Read in the participant and experiment metadata
# First list all the sheets in the file
metadata.sheets <- excel_sheets(ptcp.metadata.file)
# Create an empty tibble that we will load all the sheets into
ptcp.metadata <- tibble()
setwd("~/GitHub/From-Manu-to-Datasci-in-R")
raw.data.path <- "DATA/"
ptcp.metadata.file <- "DATA/dataset1.xlsx"
# Read in the participant and experiment metadata
# First list all the sheets in the file
metadata.sheets <- excel_sheets(ptcp.metadata.file)
# Create an empty tibble that we will load all the sheets into
ptcp.metadata <- tibble()
for (sheet in metadata.sheets) {
# Read the information in the sheet
sheet.metadata <- read_excel(ptcp.metadata.file, sheet = sheet) %>%
# Remove columns we won't use
#select(-Date, -Time, -Notes, -`Screen?`)
# Add the information to the all-sheet tibble
ptcp.metadata <- ptcp.metadata %>%
bind_rows(sheet.metadata)
}
library(tidyverse)
library(readxl)
raw.data.path <- "DATA/"
ptcp.metadata.file <- "DATA/dataset1.xlsx"
# Read in the participant and experiment metadata
# First list all the sheets in the file
metadata.sheets <- excel_sheets(ptcp.metadata.file)
# Create an empty tibble that we will load all the sheets into
ptcp.metadata <- tibble()
# Loop through each sheet...
for (sheet in dataset1.sheets) {
# Read the information in the sheet
sheet.dataset1 <- read_excel(ptcp.dataset1.file, sheet = sheet) %>%
# Remove columns we won't use
#select(-Date, -Time, -Notes, -`Screen?`)
# Add the information to the all-sheet tibble
ptcp.dataset1 <- ptcp.dataset1 %>%
bind_rows(sheet.dataset1)
}
for (sheet in dataset1.xlsx) {
# Read the information in the sheet
sheet.dataset1 <- read_excel(ptcp.dataset1.file, sheet = sheet) %>%
# Remove columns we won't use
#select(-Date, -Time, -Notes, -`Screen?`)
# Add the information to the all-sheet tibble
ptcp.dataset1 <- ptcp.dataset1 %>%
bind_rows(dataset1.xlsx)
library(tidyverse)
library(readxl)
raw.data.path <- "DATA/"
ptcp.metadata.file <- "DATA/dataset1.xlsx"
# Read in the participant and experiment metadata
# First list all the sheets in the file
metadata.sheets <- excel_sheets(ptcp.metadata.file)
# Create an empty tibble that we will load all the sheets into
ptcp.metadata <- tibble()
# Loop through each sheet...
for (sheet in dataset1.xlsx) {
# Read the information in the sheet
sheet.dataset1 <- read_excel(ptcp.dataset1.file, sheet = sheet) %>%
# Remove columns we won't use
#select(-Date, -Time, -Notes, -`Screen?`)
# Add the information to the all-sheet tibble
ptcp.dataset1 <- ptcp.dataset1 %>%
bind_rows(dataset1.xlsx)
}
``
library(tidyverse)
library(readxl)
raw.data.path <- "DATA/"
ptcp.metadata.file <- "DATA/dataset1.xlsx"
# Read in the participant and experiment metadata
# First list all the sheets in the file
metadata.sheets <- excel_sheets(ptcp.metadata.file)
# Create an empty tibble that we will load all the sheets into
ptcp.metadata <- tibble()
# Loop through each sheet...
for (sheet in dataset1.xlsx) {
# Read the information in the sheet
sheet.dataset1 <- read_excel(ptcp.dataset1.file, sheet = sheet) %>%
# Remove columns we won't use
#select(-Date, -Time, -Notes, -`Screen?`)
# Add the information to the all-sheet tibble
ptcp.dataset1 <- ptcp.dataset1 %>%
bind_rows(dataset1.xlsx)
}
library(tidyverse)
library(readxl)
raw.data.path <- "DATA/"
ptcp.metadata.file <- "DATA/dataset1.xlsx"
multiplesheets <- function(dataset1.xlsx) {
# getting info about all excel sheets
sheets <- readxl::excel_sheets(dataset1.xlsx)
tibble <- lapply(sheets, function(x) readxl::read_excel(dataset1.xlsx, sheet = x))
data_frame <- lapply(tibble, as.data.frame)
# assigning names to data frames
names(data_frame) <- sheets
# print data frame
print(data_frame)
}
# specifying the path name
path <- "C:/Users/lenovo/Documents/GitHub/From-Manu-to-Datasci-in-R/DATA"
multiplesheets(path)
raw.data.path <- "DATA/"
ptcp.metadata.file <- "DATA/dataset1.xlsx"
multiplesheets <- function(dataset1.xlsx) {
# getting info about all excel sheets
sheets <- readxl::excel_sheets(dataset1.xlsx)
tibble <- lapply(sheets, function(x) readxl::read_excel(dataset1.xlsx, sheet = x))
data_frame <- lapply(tibble, as.data.frame)
multiplesheets <- function(dataset1.xlsx) {
# getting info about all excel sheets
sheets <- readxl::excel_sheets(dataset1.xlsx)
tibble <- lapply(sheets, function(x) readxl::read_excel(dataset1.xlsx, sheet = x))
data_frame <- lapply(tibble, as.data.frame)
# assigning names to data frames
names(data_frame) <- sheets
# print data frame
print(data_frame)
}
``
multiplesheets <- function(dataset1.xlsx) {
# getting info about all excel sheets
sheets <- readxl::excel_sheets(dataset1.xlsx)
tibble <- lapply(sheets, function(x) readxl::read_excel(dataset1.xlsx, sheet = x))
data_frame <- lapply(tibble, as.data.frame)
# assigning names to data frames
names(data_frame) <- sheets
# print data frame
print(data_frame)
}
library(readxl)
read_excel_allsheets <- function(filename, tibble = FALSE) {
# I prefer straight data.frames
# but if you like tidyverse tibbles (the default with read_excel)
# then just pass tibble = TRUE
sheets <- readxl::excel_sheets(filename)
x <- lapply(sheets, function(X) readxl::read_excel(filename, sheet = X))
if(!tibble) x <- lapply(x, as.data.frame)
names(x) <- sheets
x
}``
library(readxl)
read_excel_allsheets <- function(ataset1.xlsx, tibble = TRUE) {
sheets <- readxl::excel_sheets(ataset1.xlsx)
x <- lapply(sheets, function(X) readxl::read_excel(ataset1.xlsx, sheet = 3))
if(!tibble) x <- lapply(x, as.data.frame)
names(x) <- sheets
x
}
library(readxl)
read_excel_allsheets <- function(dataset1.xlsx, tibble = TRUE) {
sheets <- readxl::excel_sheets(dataset1.xlsx)
x <- lapply(sheets, function(X) readxl::read_excel(dataset1.xlsx, sheet = 3))
if(!tibble) x <- lapply(x, as.data.frame)
names(x) <- sheets
x
}
raw.data.path <- "DATA/"
ptcp.metadata.file <- "DATA/dataset1.xlsx"
dataset <- read_excel("dataset1.xlsx")
setwd("~/GitHub/From-Manu-to-Datasci-in-R")
raw.data.path <- "DATA/"
dataset <- read_excel("dataset1.xlsx")
View(ptcp.metadata)
dataset <- read_excel("dataset1.xlsx", sheet = "dataset1")
setwd("~/GitHub/From-Manu-to-Datasci-in-R")
paste(raw.data.path,"dataset1.xlsx", collapse = "")
paste0(raw.data.path,"dataset1.xlsx")
dataset <- read_excel(paste0(raw.data.path,"dataset1.xlsx"), sheet = "dataset1")
dataset <- read_excel(paste0(raw.data.path,"dataset1.xlsx"), sheet = 3)
dataset
for (i in list(1,3)) {
bigsheets<- read_excel(paste0(raw.data.path,"dataset1.xlsx"), sheet = i)
}
bigsheets
View(bigsheets)
ptcp.metadata.file <- "DATA/dataset1.xlsx"
metadata.sheets <- excel_sheets(ptcp.metadata.file)
for (sheet in metadata.sheets ) {
bigsheets <- read_excel(ptcp.metadata.file, sheet = sheet)
}
ptcp.metadata.file <- "DATA/dataset1.xlsx"
metadata.sheets <- excel_sheets(ptcp.metadata.file)
for (sheet in metadata.sheets ) {
bigsheets <- read_excel(ptcp.metadata.file, sheet = sheet)
}
bigsheets
for (i in list(1,3)) {
bigsheets<- read_excel(paste0(raw.data.path,"dataset1.xlsx"), sheet = i)
bind_rows(bigsheets)
}
bigsheets
raw.data.path <- "DATA/"
ptcp.metadata <- tibble()
for (i in list(1,3)) {
bigsheets<- read_excel(paste0(raw.data.path,"dataset1.xlsx"), sheet = i)
ptcp.metadata <- ptcp.metadata %>%
bind_rows(bigsheets)
}
bigsheets
raw.data.path <- "DATA/"
ptcp.metadata <- tibble()
for (i in list(1,3)) {
bigsheets<- read_excel(paste0(raw.data.path,"dataset1.xlsx"), sheet = i)
ptcp.metadata <- ptcp.metadata %>%
bind_rows(bigsheets)
}
bigsheets
library(tidyverse)
library(readxl)
library(readxl)
raw.data.path <- "DATA/"
ptcp.metadata <- tibble()
for (i in list(1,3)) {
bigsheets<- read_excel(paste0(raw.data.path,"dataset1.xlsx"), sheet = i)
ptcp.metadata <- bigsheets %>%
bind_rows(ptcp.metadata)
}
ptcp.metadata
view(ptcp.metadata)
raw.data.path <- "DATA/"
ptcp.metadata <- tibble()
for (i in list(1,3)) {
bigsheets<- read_excel(paste0(raw.data.path,"dataset1.xlsx"), sheet = i)
ptcp.metadata <- bigsheets %>%
bind_rows(ptcp.metadata)
}
ptcp.metadata
view(ptcp.metadata)
raw.data.path <- "DATA/"
ptcp.metadata <- tibble()
for (i in list(1,4)) {
bigsheets<- read_excel(paste0(raw.data.path,"dataset1.xlsx"), sheet = i)
ptcp.metadata <- bigsheets %>%
bind_rows(ptcp.metadata)
}
ptcp.metadata
view(ptcp.metadata)
raw.data.path <- "DATA/"
ptcp.metadata <- tibble()
for (i in list(1,3)) {
bigsheets<- read_excel(paste0(raw.data.path,"dataset1.xlsx"), sheet = i)
ptcp.metadata <- bigsheets %>%
bind_rows(ptcp.metadata)
}
ptcp.metadata
raw.data.path <- "DATA/"
ptcp.metadata <- tibble()
for (i in list(1,3)) {
bigsheets<- read_excel(paste0(raw.data.path,"dataset1.xlsx"), sheet = i)
ptcp.metadata <- bigsheets %>%
bind_rows(ptcp.metadata)
}
raw.data.path <- "DATA/"
ptcp.metadata <- tibble()
for (i in list(1,3)) {
bigsheets<- read_excel(paste0(raw.data.path,"dataset1.xlsx"), sheet = i)
ptcp.metadata <- bigsheets %>%
bind_rows(ptcp.metadata)
}
ptcp.metadata
view(ptcp.metadata)
sort(unique(ptcp.metadata$`trial name`))
raw.data.path <- "DATA/"
ptcp.metadata <- tibble()
for (i in list(1:3)) {
bigsheets<- read_excel(paste0(raw.data.path,"dataset1.xlsx"), sheet = i)
ptcp.metadata <- bigsheets %>%
bind_rows(ptcp.metadata)
}
raw.data.path <- "DATA/"
ptcp.metadata <- tibble()
for (i in c(1:3)) {
bigsheets<- read_excel(paste0(raw.data.path,"dataset1.xlsx"), sheet = i)
ptcp.metadata <- bigsheets %>%
bind_rows(ptcp.metadata)
}
sort(unique(ptcp.metadata$`trial name`))
ptcp.metadata%>%
ptcp.metadata
raw.data.path <- "DATA/"
ptcp.metadata <- tibble()
for (i in c(1:3)) {
bigsheets<- read_excel(paste0(raw.data.path,"dataset1.xlsx"), sheet = i)
ptcp.metadata <- bigsheets %>%
bind_rows(ptcp.metadata)
}
ptcp.metadata
mutate(RT = click_time- `raw_trial time`)
mutate(RT = click_time - `raw_trial time`)
mutate(RT = click_time - `raw_trial time`)
ptcp.metadata%>%
mutate(RT = click_time - `raw_trial time`)
mutate(x_position = ifelese( x_position < 4, "L","R"),
y_position = ifelse(y_position < 4, "UP","DOWN" )
Choice = case_when(
x_position == L & y_position == UP ~ 1,
x_position == L & y_position == DOWN ~ 2,
)
)
ptcp.metadata%>%
mutate(x_position = ifelese( x_position < 4, "L","R"),
y_position = ifelse(y_position < 4, "UP","DOWN" )
Choice = case_when(
x_position == L & y_position == UP ~ 1,
x_position == L & y_position == DOWN ~ 2,
x_position == R & y_position == UP ~ 3,
x_position == R & y_position == DOWN ~ 4,
))
ptcp.metadata%>%
mutate(x_position = ifelese( x_position < 4, "L","R"),
y_position = ifelse(y_position < 4, "UP","DOWN" ),
Choice = case_when(
x_position == L & y_position == UP ~ 1,
x_position == L & y_position == DOWN ~ 2,
x_position == R & y_position == UP ~ 3,
x_position == R & y_position == DOWN ~ 4,
))
ptcp.metadata%>%
mutate(x_position = ifelese( x_position < 4, "L","R"),
y_position = ifelse(y_position < 4, "UP","DOWN" ),
Choice = case_when(
x_position == L & y_position == UP ~ 1,
x_position == L & y_position == DOWN ~ 2,
x_position == R & y_position == UP ~ 3,
x_position == R & y_position == DOWN ~ 4,
))
ptcp.metadata%>%
mutate(x_position = ifelse( x_position < 4, "L","R"),
y_position = ifelse(y_position < 4, "UP","DOWN" ),
Choice = case_when(
x_position == L & y_position == UP ~ 1,
x_position == L & y_position == DOWN ~ 2,
x_position == R & y_position == UP ~ 3,
x_position == R & y_position == DOWN ~ 4,
))
ptcp.metadata%>%
mutate(x_position = ifelse( x_position < 4, "L","R"),
y_position = ifelse(y_position < 4, "UP","DOWN" ),
Choice = case_when(
x_position == L & y_position == UP ~ 1,
x_position == L & y_position == DOWN ~ 2,
x_position == R & y_position == UP ~ 3,
x_position == R & y_position == DOWN ~ 4,
))
ptcp.metadata%>%
mutate(x_position = ifelse( `X mouse_position` < 4, "L","R"),
y_position = ifelse(`Y mouse_position` <4, "UP","DOWN" ),
Choice = case_when(
x_position == L & y_position == UP ~ 1,
x_position == L & y_position == DOWN ~ 2,
x_position == R & y_position == UP ~ 3,
x_position == R & y_position == DOWN ~ 4,
))
raw.data.path <- "DATA/"
ptcp.metadata <- tibble()
for (i in c(1:3)) {
bigsheets<- read_excel(paste0(raw.data.path,"dataset1.xlsx"), sheet = i)
ptcp.metadata <- bigsheets %>%
bind_rows(ptcp.metadata)
}
ptcp.metadata%>%
mutate(RT = click_time - `raw_trial time`,
x_position = `X mouse_position` )
view(ptcp.metadata)
ptcp.metadata%>%
mutate(x_position = ifelse( `X mouse_position` < 4, "L","R"),
y_position = ifelse(`Y mouse_position` <4, "UP","DOWN" ),
Choice = case_when(
x_position == "L" & y_position == "UP" ~ 1,
x_position == "L" & y_position == "DOWN" ~ 2,
x_position == "R" & y_position == "UP" ~ 3,
x_position == "R" & y_position == "DOWN" ~ 4,
))
View(ptcp.metadata)
raw.data.path <- "DATA/"
ptcp.metadata <- tibble()
for (i in c(1:3)) {
bigsheets<- read_excel(paste0(raw.data.path,"dataset1.xlsx"), sheet = i)
ptcp.metadata <- bigsheets %>%
bind_rows(ptcp.metadata)
}
ptcp.metadata%>%
mutate(RT = click_time - `raw_trial time`,
x_position = `X mouse_position` )
ptcp.metadata%>%
mutate(x_position = ifelse( `X mouse_position` < 4, "L","R"),
y_position = ifelse(`Y mouse_position` <4, "UP","DOWN" ),
Choice = case_when(
x_position == "L" & y_position == "UP" ~ 1,
x_position == "L" & y_position == "DOWN" ~ 2,
x_position == "R" & y_position == "UP" ~ 3,
x_position == "R" & y_position == "DOWN" ~ 4,
))
view(ptcp.metadata)
raw.data.path <- "DATA/"
ptcp.metadata <- tibble()
for (i in c(1:3)) {
bigsheets<- read_excel(paste0(raw.data.path,"dataset1.xlsx"), sheet = i)
ptcp.metadata <- bigsheets %>%
bind_rows(ptcp.metadata)
}
ptcp.metadata%>%
mutate(RT = click_time - `raw_trial time`)
ptcp.metadata%>%
mutate(x_position = ifelse( `X mouse_position` < 4, "L","R"),
y_position = ifelse(`Y mouse_position` <4, "UP","DOWN" ),
Choice = case_when(
x_position == "L" & y_position == "UP" ~ 1,
x_position == "L" & y_position == "DOWN" ~ 2,
x_position == "R" & y_position == "UP" ~ 3,
x_position == "R" & y_position == "DOWN" ~ 4,
))
view(ptcp.metadata)
ptcp.metadata <- ptcp.metadata %>%
mutate(x_position = ifelse( `X mouse_position` < 4, "L","R"),
y_position = ifelse(`Y mouse_position` <4, "UP","DOWN" ),
Choice = case_when(
x_position == "L" & y_position == "UP" ~ 1,
x_position == "L" & y_position == "DOWN" ~ 2,
x_position == "R" & y_position == "UP" ~ 3,
x_position == "R" & y_position == "DOWN" ~ 4,
),
RT = click_time - `raw_trial time`)
ptcp.metadata <- ptcp.metadata %>%
mutate(x_position = ifelse( `X mouse_position` < 4, "L","R"),
y_position = ifelse(`Y mouse_position` <4, "UP","DOWN" ),
Choice = case_when(
x_position == "L" & y_position == "UP" ~ 1,
x_position == "L" & y_position == "DOWN" ~ 2,
x_position == "R" & y_position == "UP" ~ 3,
x_position == "R" & y_position == "DOWN" ~ 4,
),
RT = click_time - `raw_trial time`))
ptcp.metadata <- ptcp.metadata %>%
mutate(x_position = ifelse( `X mouse_position` < 4, "L","R"),
y_position = ifelse(`Y mouse_position` <4, "UP","DOWN" ),
Choice = case_when(
x_position == "L" & y_position == "UP" ~ 1,
x_position == "L" & y_position == "DOWN" ~ 2,
x_position == "R" & y_position == "UP" ~ 3,
x_position == "R" & y_position == "DOWN" ~ 4,
),
RT = click_time - `raw_trial time`)
view(ptcp.metadata)
load("~/GitHub/From-Manu-to-Datasci-in-R/.RData")
setwd("~/GitHub/From-Manu-to-Datasci-in-R")
setwd("~/GitHub/D2M2022")
> library(tidyverse)
adultdata <-read_csv("adult.data.csv")
ggplot(adultdata,aes(x= `capital-gain`))+geom_histogram()
ggplot(adultdata, aes(y= `hours-per-week`))+geom_density()
library(tidyverse)
adultdata <-read_csv("adult.data.csv")
ggplot(adultdata,aes(x= `capital-gain`))+geom_histogram()
ggplot(adultdata, aes(y= `hours-per-week`))+geom_density()
library(tidyverse)
adultdata <-read_csv("adult.data.csv")
